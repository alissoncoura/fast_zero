[tool.poetry]
name = "ccontrol"
version = "0.1.0"
description = ""
authors = ["alissoncoura <alissonbcf@gmail.com>"]
readme = "README.md"
license = ""

[tool.poetry.dependencies]
python = ">=3.13,<4.0"
fastapi = {extras = ["standard"], version = ">=0.115.14,<0.116.0"}
pydantic-settings = ">=2.10.1,<3.0.0"
sqlalchemy = {extras = ["asyncio"], version = ">=2.0.42,<3.0.0"}
alembic = ">=1.16.4,<2.0.0"
pyjwt = ">=2.10.1,<3.0.0"
tzdata = ">=2025.2,<2026.0"
pwdlib = {extras = ["argon2"], version = ">=0.2.1,<0.3.0"}
aiosqlite = ">=0.21.0,<0.22.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
taskipy = "^1.14.1"
ruff = "^0.12.1"
pytest-asyncio = "^1.1.0"
factory-boy = "^3.3.3"
freezegun = "^1.5.4"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'FAST']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev ccontrol/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=ccontrol -vv'
post_test = 'coverage html'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]
